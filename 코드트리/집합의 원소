import java.io.*;
import java.util.*;
import java.math.*;


public class Main {
    static int n;
    static int m;
    static int[] uni;

    static int find(int k){
        if(uni[k] == k) return k;
        else{
            int q = find(uni[k]);
            uni[k] = q;
            return q;
        }
    }

    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        StringBuilder sb = new StringBuilder();

        n = Integer.parseInt(st.nextToken());
        m = Integer.parseInt(st.nextToken());

        uni = new int[n+1];

        for(int i = 1;i<=n;i++){
            uni[i] = i;
        }

        for(int i = 0;i<m;i++){
            st = new StringTokenizer(br.readLine());

            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());
            int c = Integer.parseInt(st.nextToken());

            if(a == 0){
                int fir = find(b);
                int sec = find(c);
                
                uni[fir] = sec;
            }

            else{
                if(find(b) == find(c)){
                    sb.append(1).append("\n");
                }
                else sb.append(0).append("\n");
            }
        }

        System.out.println(sb);
    }
}
