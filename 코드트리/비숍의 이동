import java.io.*;
import java.util.*;
import java.math.*;

public class Main {

    static class pair{
        int x;
        int y;

        pair(int x, int y){
            this.x = x;
            this.y = y;
        }
    }

    


    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        int[][] arr = new int[n][n];

        int[][] vis = new int[n][n];

        int[][] d = new int[n][n];


        StringTokenizer st;

        for(int i = 0;i<n;i++){
            st = new StringTokenizer(br.readLine());
            for(int j = 0;j<n;j++){
                arr[i][j] = Integer.parseInt(st.nextToken());
            }
        }

            st = new StringTokenizer(br.readLine());
        int a = Integer.parseInt(st.nextToken())-1;
         int b = Integer.parseInt(st.nextToken())-1;

        Stack<pair> s = new Stack<>();

        int nn = 1;

        int[] dx = {1,1,-1,-1};
        int[] dy = {1,-1,1,-1};

        s.push(new pair(a,b));

                while(s.isEmpty() != true){
                    pair now = s.pop();

                    d[now.x][now.y] = nn;
                    vis[now.x][now.y] = 1;

                    for(int z = 0;z<4;z++){
                        //System.out.println(z);
                        if((now.x + dx[z]) >= 0 && (now.x + dx[z]) < n && (now.y + dy[z]) >= 0 && (now.y + dy[z]) < n && 
                        arr[now.x + dx[z]][now.y + dy[z]] == 0 && vis[now.x + dx[z]][now.y + dy[z]] == 0){
                            s.push(new pair(now.x + dx[z],now.y + dy[z]));
                        }
                    }

                }
    

      


        for(int i = 0;i<n;i++){
            for(int j = 0;j<n;j++){
                System.out.printf("%d ",d[i][j]);
            }
            System.out.println();
        }
        


        
        
    }
}
